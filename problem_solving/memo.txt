/*{{{*/
#include <bits/stdc++.h>
#ifndef ONLINE_JUDGE
#include "dbg.h"  // https://github.com/sharkdp/dbg-macro
#define FileInput freopen("input.txt", "rt", stdin);
#else
#define dbg(...)
#define FileInput
#endif
//#define int long long
#define FastIO ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);
#define CASET int ___T; cin>>___T;for(int cs=1;cs<=___T;cs++)
using namespace std;
#define REP(i,n) for(int i=0;i<(int)(n);i++)
#define REP1(i,n) for(int i=1;i<=(int)(n);i++)
using vi = vector<int>;
using vs = vector<string>;
using vvi = vector<vi>;
#define SZ(X) ((int)(X).size())
#define ALL(X) (X).begin(), (X).end()
#define OUT(x) {cout << (x) << '\n'; }
template <class T>
void OUTV(const vector<T> & v) {REP(i,v.size()) cout << v[i] << (i + 1 == v.size() ? '\n' : ' ');}
typedef long long ll;
const int INF = (int)1e9;
/*}}}*/

int32_t main()
{
    FastIO; FileInput;

    return 0;
}







-----------------------------------------------------------
#ifdef WIN32
freopen("input.txt", "rt", stdin);
#endif
------------------------------------------------------------
//experimental
#define M0(r) memset(r, 0, sizeof(r))
#define TIME (chrono::steady_clock::now().time_since_epoch().count())
#define done(r, ...) exit(0 * printf(r))
#define RALL(r)(r).rbegin(),(r).rend()
